<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getallbynameFlow" doc:id="ca43ba05-baf9-4ed6-a4e9-91c0b363a6ce" >
		<db:select doc:name="Select" doc:id="dd04e61d-63f7-4452-ad33-702a4f69f74e" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT c.customer_id,c.last_name,c.first_name,c.email,c.phone,
ad.house_number,ad.street,ad.city,ad.pincode,ad.address_type,ad.address_id
 FROM customers c left  join address ad  on  c.customer_id=ad.customer_id where c.first_name like :Fname
LIMIT :limit  OFFSET :offset]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	Fname: '%' ++ vars.fname as String ++ '%',
	limit: vars.PageSize as Number default 2,
	offset: (vars.page as Number -1) * vars.PageSize as Number default 0
	
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="78a6d87a-65fc-4d38-909c-42da42449f8c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var customersGroupedById = payload groupBy ((item, index) -> item.customer_id )

var customersmappedWithAddresses = customersGroupedById mapObject (V,K,I)-> {
	(K):{
		customerId: K,
		firstName: V[0].first_name,
		lastName: V[0].last_name,
		email: V[0].email,
		phone: V[0].phone,
		(addresses: ( V map (item)-> {
						
						houseNumber: item.house_number,
						street: item.street,
						city: item.city,
						pincode: item.pincode,
						addressType: item.address_type,
						addressId: item.address_id
		             }
		             
		             )) if (V[0].address_id != null)
		
	}
}
---
customersmappedWithAddresses pluck (V,K,I)-> V]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="c13cd8c1-6e82-4ac2-b6f5-c982f7ca9274" message="#[payload]"/>
	</flow>
</mule>
